import Head from 'next/head'
import { loadVeg } from '../../lib/loadVeg.js'
import { loadRecipes } from '../../lib/loadRecipes.js'
import Recipe from '../../components/Recipe.js'
import { React, useState } from 'react'
import Select from 'react-select'
import Link from 'next/link'

const currentMonth = new Date().getMonth()

export async function getStaticProps() {
    const allVeg = await loadVeg()
    const currentMonthData = allVeg[currentMonth]
    const currentMonthVegArray = currentMonthData.food.map((veg) => veg.name)
    const currentMonthsRecipes = await loadRecipes(currentMonthVegArray)

    const selectOptions = currentMonthVegArray.map((opt) => ({
        label: opt,
        value: opt,
    }))
    return {
        props: { currentMonthsRecipes, selectOptions },
        revalidate: 604800, //seconds in week
    }
}

export default function Home({ currentMonthsRecipes, selectOptions }) {
    const [userChoice, setUserChoice] = useState('')
    console.log(currentMonthsRecipes)
    return (
        <>
            <Head>
                <title>Recipes</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="container mx-auto">
                <h2 className="text-2xl text-center font-bold">
                    This Month Recipes
                </h2>
                <div className="w-56 md:w-96 my-6 m-auto">
                    <Select
                        options={selectOptions}
                        onChange={(opt) => setUserChoice(opt.value)}
                    />
                    <Link
                        href={
                            '/seasonal-recipes/' +
                            userChoice.toLowerCase().replace(' ', '-')
                        }
                        className="px-4 py-2 my-3 inline-block font-semibold text-sm bg-black text-pale_yellow rounded-md shadow-sm hover:bg-pale_yellow hover:text-black duration-300"
                    >
                        SEARCH
                    </Link>
                </div>
                <div className="grid gap-6 grid-cols-1 md:grid-cols-2 max-w-6xl mx-auto my-12">
                    {currentMonthsRecipes.hasOwnProperty('fetched') &&
                    currentMonthsRecipes.fetched.length !== 0
                        ? currentMonthsRecipes.fetched.map((recipe) => (
                              <Recipe key={recipe.label} props={recipe} />
                          ))
                        : 'We have exceeded our API calls. Please try again in a minute!'}
                </div>
            </div>
        </>
    )
}
